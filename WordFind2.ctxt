#BlueJ class context
comment0.target=WordFind2
comment1.params=n\ words
comment1.target=void\ init(int,\ java.lang.String[])
comment1.text=\ \n\ init\ makes\ board\ a\ matrix\ of\ size\ n\ and\ the\ list\ of\ words\n
comment10.params=word\ I\ J\ rev
comment10.target=boolean\ checkVert(java.lang.String,\ int,\ int,\ char)
comment10.text=\ \n\ checkVert\ checks\ if\ word\ (or\ reverse\ of\ a\ word)\ is\ present\ at\ position\ I\ and\ J\ in\ the\ board\ vertically\n
comment11.params=word\ I\ J\ rev
comment11.target=boolean\ checkDiagDown(java.lang.String,\ int,\ int,\ char)
comment11.text=\ \n\ checkDiagDown\ checks\ if\ word\ (or\ reverse\ of\ a\ word)\ is\ present\ at\ position\ I\ and\ J\ in\ the\ board\ diganally\ down\n
comment12.params=word\ I\ J\ rev
comment12.target=boolean\ checkDiagUp(java.lang.String,\ int,\ int,\ char)
comment12.text=\ \n\ checkDiagUp\ checks\ if\ word\ (or\ reverse\ of\ a\ word)\ is\ present\ at\ position\ I\ and\ J\ in\ the\ board\ digonally\ up\n
comment13.params=word\ I\ J\ dir\ rev\ words
comment13.target=boolean\ check(java.lang.String,\ int,\ int,\ char,\ char,\ java.lang.String[])
comment13.text=\ \n\ check\ uses\ the\ functions\ checkHori,checkVert,\ checkDiagDown\ and\ checkDiagUp\ to\ check\ if\ word\ is\ a\ valid\ find\ from\ an\ array\ words\n
comment14.params=word\ I\ J\ rev
comment14.target=void\ updateHori(java.lang.String,\ int,\ int,\ char)
comment14.text=\ \n\ updateHori\ changes\ the\ case\ of\ word\ (or\ reverse\ of\ word)\ from\ position\ I\ and\ J\ in\ the\ board\ horizontally\n
comment15.params=word\ I\ J\ rev
comment15.target=void\ updateVert(java.lang.String,\ int,\ int,\ char)
comment15.text=\ \n\ updateVert\ changes\ the\ case\ of\ word\ (or\ reverse\ of\ word)\ from\ position\ I\ and\ J\ in\ the\ board\ vertically\n
comment16.params=word\ I\ J\ rev
comment16.target=void\ updateDiagDown(java.lang.String,\ int,\ int,\ char)
comment16.text=\ \n\ updateDiagDown\ changes\ the\ case\ of\ word\ (or\ reverse\ of\ word)\ from\ position\ I\ and\ J\ in\ the\ board\ diagonally\ down\n
comment17.params=word\ I\ J\ rev
comment17.target=void\ updateDiagUp(java.lang.String,\ int,\ int,\ char)
comment17.text=\ \n\ updateDiagUp\ changes\ the\ case\ of\ word\ (or\ reverse\ of\ word)\ from\ position\ I\ and\ J\ in\ the\ board\ diagonally\ up\n
comment18.params=
comment18.target=void\ play()
comment18.text=\ \n\ play\ handles\ the\ entire\ user\ interface\ and\ logic\ for\ playing\ the\ game\ using\ the\ check\ function\n
comment19.params=args
comment19.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=void\ input()
comment2.text=\ \n\ input\ asks\ the\ user\ for\ the\ size\ of\ the\ board\ and\ words\ and\ uses\ init\ function\ to\ initialise\ the\ words\ array\ and\ board\ matrix\n
comment20.params=array\ element
comment20.target=java.lang.String[]\ remove(java.lang.String[],\ java.lang.String)
comment20.text=\ \n\ remove\ removes\ an\ element\ from\ a\ given\ array\n
comment21.params=word
comment21.target=java.lang.String\ reverse(java.lang.String)
comment21.text=\ \n\ reverse\ returns\ the\ reverse\ of\ a\ word\n
comment22.params=
comment22.target=void\ printBoard()
comment22.text=\ \n\ printBoard\ prints\ a\ the\ word\ board\ in\ a\ legible\ and\ playable\ manner\n
comment23.params=
comment23.target=void\ printWords()
comment23.text=\ \n\ printWords\ prints\ a\ the\ words\ array\ in\ a\ legible\ manner\n
comment24.params=words\ words2
comment24.target=void\ printFound(java.lang.String[],\ java.lang.String[])
comment24.text=\ \n\ printFound\ prints\ a\ the\ words\ found\ by\ the\ user\ in\ a\ legible\ manner\n
comment25.params=word\ array
comment25.target=boolean\ search(java.lang.String,\ java.lang.String[])
comment25.text=\ \n\ search\ checks\ if\ a\ word\ is\ present\ in\ an\ array\n
comment26.params=word\ array
comment26.target=java.lang.String[]\ append(java.lang.String,\ java.lang.String[])
comment26.text=\ \n\ append\ appends\ a\ word\ to\ an\ array\n
comment27.params=array\ array2
comment27.target=boolean\ compare(java.lang.String[],\ java.lang.String[])
comment27.text=\ \n\ compare\ checks\ if\ all\ elements\ in\ array\ are\ present\ in\ array2\ and\ vise-versa\n
comment3.params=
comment3.target=void\ initDictionary()
comment3.text=\ \n\ initDictionary\ reads\ the\ dictionary\ file\ and\ fills\ in\ the\ dictionary\ array\n
comment4.params=word\ rev
comment4.target=boolean\ hori(java.lang.String,\ boolean)
comment4.text=\ \n\ hori\ places\ a\ given\ word\ (or\ reverse\ of\ a\ word)\ in\ the\ board\ horizontally,\ checking\ that\ it\ fits\ and\ dosen't\ clash\ with\ other\ words\n
comment5.params=word\ rev
comment5.target=boolean\ vert(java.lang.String,\ boolean)
comment5.text=\ \n\ veret\ places\ a\ given\ word\ (or\ reverse\ of\ a\ word)\ in\ the\ board\ vertically,\ checking\ that\ it\ fits\ and\ dosen't\ clash\ with\ other\ words\n
comment6.params=word\ rev
comment6.target=boolean\ diagDown(java.lang.String,\ boolean)
comment6.text=\ \n\ diagDown\ places\ a\ given\ word\ (or\ reverse\ of\ a\ word)\ in\ the\ board\ diagonally\ down,\ checking\ that\ it\ fits\ and\ dosen't\ clash\ with\ other\ words\n
comment7.params=word\ rev
comment7.target=boolean\ diagUp(java.lang.String,\ boolean)
comment7.text=\ \n\ diagUp\ places\ a\ given\ word\ (or\ reverse\ of\ a\ word)\ in\ the\ board\ diagonally\ up,\ checking\ that\ it\ fits\ and\ dosen't\ clash\ with\ other\ words\n
comment8.params=
comment8.target=void\ makeBoard()
comment8.text=\ \n\ makeBoard\ randomly\ uses\ hori,\ vert,\ diagDown\ and\ diagUp\ on\ al\ the\ words\ that\ user\ has\ inputted\n\ It\ also\ fills\ the\ rest\ of\ the\ board\ with\ random\ characters\n
comment9.params=word\ I\ J\ rev
comment9.target=boolean\ checkHori(java.lang.String,\ int,\ int,\ char)
comment9.text=\ \n\ checkHori\ checks\ if\ word\ (or\ reverse\ of\ a\ word)\ is\ present\ at\ position\ I\ and\ J\ in\ the\ board\ horizontally\n
numComments=28
